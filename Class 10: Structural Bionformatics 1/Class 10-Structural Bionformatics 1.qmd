---
title: "Class 10: Structural Bionformatics 1"
author: "Christopher Levinger (A17390693)"
format: pdf
toc: true
---

## PDB database


The main repository of biomolecular structure data is called the [Protein Data Bank] (https://www.rcsb.org/) (PDB for short). It is the second oldest database (after GenBank).

```{r}
result <- 202990/252188522*100
result
```
```

```{r}
stats <- read.csv("Data Export Summary .csv")
stats
```

```{r}
x <- as.numeric(stats$xray)
```

```{r}
x <- as.numeric(stats$xray)
x <- stats$X.ray
#Substitute coma for nothing 
as.numeric( gsub(",","",stats$X.ray))
y <- gsub (",","",x)
```

Turn this into a function for any input x. 
Turn this snippet into a function so I can use it any time I have this commma problem (i.e the other columns of this `stats` table)
>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy?
According to the results below, it was determined at 93.6787%

```{r}
comma.sum <- function(x) {
  y <- gsub (",","",x)
sum(as.numeric( y ))
}

```

comma.sum <- function(x) {
  y <- gsub (",","",x)
sum(as.numeric( y ))

comma.sum <- function(x) {
  x <- as.character(x)
  y <- gsub(",", "", x)
  y_numeric <- as.numeric(y)
  sum(y_numeric, na.rm = TRUE)

```{r}
xray.sum <- comma.sum(stats$X.ray)
em.sum <- comma.sum(stats$EM)
total.sum <- comma.sum(stats$Total)
xray.prop <- xray.sum / total.sum
```
```{r}
f <- as.numeric(xray.sum/total.sum*100)
```

```{r}
g <- em.sum/total.sum *100
```

```{r}
f+g
```

>Q2: What proportion of structures in the PDB are protein? When considering only the protein only row of the dataframe, it yielded that 86.2107% of the structures were only composed of protein structures. When considering the rows that had protein elements in it, as in not just only protein, but also considering those structures with combinations of protein and nucleic acid and oligosaccharides, this yielded a much higher proportion of structures at 97.91046%. 

```{r}
z<- as.numeric(stats[which(stats$Type == "Protein (only)"), ])
```

```{r}
a <- as.numeric(gsub(",", "", stats[1, 8]))
```

```{r}
r <- gsub(",", "", stats$Total)
numeric_total <- as.numeric(r)
b <- sum(numeric_total, na.rm = TRUE)
b
```

```{r}
a/b*100
```

```{r}
a <- as.numeric(gsub(",", "", stats[1, 8]))
e <- as.numeric(gsub(",", "", stats[2, 8]))
f <- as.numeric(gsub(",", "", stats[3, 8]))
(a+e+f)/b *100

```

>Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB? (Skip Question 3)
We were told to skip this question 3 even though it is part of the rubric. 



## 2. Visualizing with Mol-Star

Explore the HIV-1 protease structure with PDB code: `1HSG`

![Figure1. A first view of HIV-Pr](1HSG.png)
>Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?
We only see one atom per water molecule in this structure because the Hydrogen atoms are comparatively very small compared to the much larger Oxygen atoms, thus the mol star website only depicts the larger oxygen structure when displaying a water molecule. 
>Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have? This water molecule can be identified as water 301. This water was key for inhibition and designing residues for hydrogen binding for more effective blocking of the 1HSG protein activity. 

![Figure2. Ligand Clearly Shown in Ball and Stick format with rest of protein in spacefill representation](Key Ligand.png)

Paste ligand as ball and stick model in spacefill model with rest of protein.

![Figure 3: Key water and Aspartate Residues](1HSG D Residues.png)

## 3: Using the Bio3D package in R
The Bio 3D package is focused on structural bionformatics analysis and allows us to read and analyze PDB (and related) data. 
```{r}
library(bio3d)
```

```{r}
pdb <- read.pdb("1HSB")
pdb
```

```{r}
attributes(pdb)
```
We can see atom data with pdb$atom
```{r}
head(pdb$atom)
```
>Q7: How many amino acid residues are there in this pdb object? 198
>Q8: Name one of the two non-protein residues? HOH
>Q9:How many protein chains are in this structure? 2 A and B 

```{r}
head(pdbseq(pdb) )
```

## Molecular Visualization in R

We can make quick 3D viz with `view.pdb()` function:

```{r}
#install.packages("pak")
#pak::pak("bioboot/bio3dview")
#install.packages("NGLVieweR")
#install.packages()

#library(bio3dview)
#library(NGLvieweR)

#view.pdb(pdb) |>
  #setSpin()


```
```{r}
#install.packages("pak")
#pak::pak("bioboot/bio3dview")
#install.packages("NGLVieweR")
```

```{r}
library(bio3dview)
library(NGLVieweR)
view.pdb(pdb, backgroundColor="pink", colorScheme="sse")
```

```{r}
sel <- atom.select(pdb, resno=25)

view.pdb(pdb, cols=c("green","orange"),
           highlight=sel,
        highlight.style="spacefill") |>
 setRock()
```

## Predicting Functional motions of a single structure

We can finish off today with a bionformatics prediction of the functional motions of a protein. 


We will run a Normal Mode Analysis (NMA) 

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
m <- nma(adk)
plot(m)
```

```{r}
view.nma(m)
```

```{r}
library(bio3d)
aa <- get.seq("1ake_A")
aa
```
>Q10. Which of the packages above is found only on BioConductor and not CRAN? 
msa

>Q11. Which of the above packages is not found on BioConductor or CRAN?: 
bio3d-view

>Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket? 
TRUE


>Q13. How many amino acids are in this sequence, i.e. how long is this sequence? 
214

We can write out a trajectory of the predicted dynamics and view this in Molstar. 

```{r}
mktrj(m,file="nma.pdb")
```

