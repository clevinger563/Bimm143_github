---
title: "class 05 gg plots"
author: "Christopher Levinger, A17390693"
format: pdf
toc: true
---

## background

There are many graphics systems available in "R". These include "base" R an tones of add on packages like **ggplot2**

Let's compare "base" and **ggplot2** briefly. We can use some data that is built into R called cars. 

In base R I can just call plot()
```{r}
plot(cars)
```
How can we do this with **ggplot2*

First we need to instal the package. We do this 'install.packages("ggplot2")`. I only need to do this once and then it will be available on my computer from then on.

> Key point: I only install packages in the R console not within quarto docs or R scripts. 
Before I use any add-on package I must load it up with a call to 'library()'

```{r}
library(ggplot2)
ggplot(cars)
```


Every ggplot has at least 3 things: 

- the **data** (in our case 'cars')
- the *aes*thetics (how the data map to the plot) 
- the **geom**s that determine how the plot is drawn (lines, points, columns, etc.)

```{r}
ggplot(cars) +
 aes(x=speed, y=dist) + 
 geom_point()
```

For "simple" plots ggplot is much more verbose than base R but the defaults are nicer and for complicated plots it becomes much more efficient and structured.

Add a line to show the relationship of speed to stopping distance (i.e. add another "layer")

```{r}
  ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()+
  geom_line()
```

```{r}
 p <- ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()+
  geom_smooth(se=FALSE, method="lm") 
```
I can always save any ggplot object (i.e. plot) 
```{r}
p
```

Q. Add a title and subtitle to the plot. 

```{r}
p + labs(title="My first ggplot",
         subtittle="Stopping Distance of old cars",
         caption = "Bimm143",
         x="Speed (MPG)",
         y="Stopping distance (ft)") +
  theme_bw()
```
## Gene expression Plot
Read input data into R

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

>Q: how many genes are in this wee dataset?

```{r}
nrow(genes)
```

> Q: How many columns are there? 

```{r}
ncol(genes)
```
>Q: What are the column names?

```{r}
colnames(genes)
```
>Q. How many "up" and "down" regulated genes are there?

```{r}
table(genes$State)
```

## Custom Color Plot
> Q. Make a first plot of this data 

```{r}
ggplot(genes) + 
  aes(x= Condition1, y=Condition2, col=State) +
  scale_color_manual( values=c("pink","gray","orange")) +
  geom_point() +
  labs(title="Gene Expression changes upon Drug Treatment")
```
## Using different aes and geoms

Let's plot some aspects of the in-built `mtcars` dataset. 

```{r}
head(mtcars)
```
> Q. Scatterplot of `mpg` vs. `disp`

```{r}
p1 <- ggplot(mtcars) +
  aes(x=disp, y=mpg) +
  geom_point() 
```

> Q. Boxplot of `gear` vs. `disp`

```{r}
p2 <- ggplot(mtcars) +
  aes(gear, disp, group=gear) +
  geom_boxplot()
```


> Q. Barplot of `carb` 

```{r}
p3 <- ggplot(mtcars) +
  aes(carb) +
  geom_bar()
```


> Smooth of `disp` vs `qsec` 

```{r}
p4 <- ggplot(mtcars) +
  aes(disp, qsec) +
  geom_point() +
  geom_smooth()
```

I want to combine all these plots into one figure with multiple pannels. 

We can use the **patchwork** to do this.

```{r}
library(patchwork)

((p1 / p2 / p3 / p4))
```
```{r}
ggsave(filename="myplot.png", width = 10, height = 10)
```

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"
gapminder <- read.delim(url)
```

## Faceting 
```{r}
head(gapminder)
```

> Q: How many countries are in this dataset?

```{r}
length(table(gapminder$country) )
```
> Q plot GDP vs. Life Expectancy colored by continent

```{r}
ggplot(gapminder) +
  aes(x=gdpPercap, y=lifeExp, col=continent) +
  geom_point(alpha=0.3) +
  facet_wrap(~continent) +
  theme_bw()
```

